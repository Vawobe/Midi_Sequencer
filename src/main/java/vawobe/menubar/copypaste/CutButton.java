package vawobe.menubar.copypaste;

import vawobe.NoteView;
import vawobe.menubar.MenuButton;
import vawobe.render.NoteRenderer;
import javafx.event.ActionEvent;
import javafx.scene.Node;
import javafx.scene.control.Tooltip;
import javafx.scene.paint.Color;
import javafx.scene.shape.SVGPath;

import java.util.ArrayList;


public class CutButton extends MenuButton {
    public CutButton() {
        super();
        SVGPath icon = new SVGPath();
        icon.setContent("M9.3306 5.4619c-.1192.2198-.2571.3375-.4136.3529-.4239.0424-.9622-.481-1.2423-1.2089-.3327-.8617-.2646-1.9093.154-2.3674.1068-.1176.1772-.1548.2982-.161.1783-.0103.3434.0613.5646.2469.2546.212.422.4422.5855.7997.3528.7774.3745 1.7453.0537 2.3377Zm-4.0172 4.77c-.053.1546-.2242.3275-.4508.4556-.7583.4292-1.9068.425-2.7158-.0091-.1554-.0831-.4174-.298-.4951-.4056-.12-.1643-.1669-.3359-.1287-.467.0274-.0929.142-.2431.2582-.3349.3011-.2402.746-.3971 1.2515-.4413.5442-.0476 1.0923.042 1.5338.2509.1945.093.2799.1468.4314.2755.1503.1261.223.2165.288.351.0458.0971.0581.238.0275.325Zm7.7748 7.826c.0515-.0302.1017-.0648.1131-.0764.0249-.0297.0447-.098.0387-.1356-.01-.0639-1.2607-3.5887-2.0423-5.7589-.2074-.5754-.2417-.6842-.221-.6798.0605.0116 2.1633.3564 3.0614.5014 1.6173.2622 3.6567.5815 3.6983.5806.0221-.001.0599-.015.0851-.0314.0411-.0275.0489-.0389.0996-.1693.0379-.0938.0548-.1547.0512-.1855-.0022-.0247-.0323-.0957-.0652-.1575-.0913-.1712-.1395-.3063-.2724-.7605-.1747-.5969-.2587-.7963-.4202-1.0004-.1237-.156-.2638-.2573-.436-.3185-.0393-.0134-.5331-.0998-1.0965-.1907-1.1375-.1826-2.6715-.4353-4.4939-.739l-1.2021-.2009-.0135-.0423c-.0086-.0268-.0055-.0634.0088-.1019.0113-.0329.0182-.0761.0139-.0944-.0044-.02-.1077-.3189-.2303-.6648-.1217-.3469-.2237-.6397-.2247-.652-.0023-.0167.0134-.0296.0814-.0639.4739-.242.8785-.7494 1.1084-1.387.0514-.1429.1352-.4626.1633-.6283.2202-1.2561-.1487-2.6931-.926-3.6064C9.1851.5734 8.1415.3178 7.2945.839c-.5026.3093-.8808.8552-1.0789 1.5619-.3483 1.2318-.0905 2.7078.6567 3.764.1833.2599.2734.3567.5486.5908l.2466.2118.0639.5481.0641.5498.1722.4871c.0943.2668.1697.49.1665.4938-.0024.0029-.1307-.0134-.2844-.0363l-.2787-.0413-.5109.0429-.5109.0429-.0929-.1285c-.1513-.2086-.2674-.3288-.504-.5175-.3015-.2416-.5812-.3963-.9762-.5401-1.5555-.5693-3.4678-.2077-4.4139.8342-.6514.718-.7195 1.6334-.1775 2.3934.1356.1904.2402.3011.4497.4753.225.1888.4017.3011.6778.4349 1.3374.6425 3.1348.5287 4.2926-.2735.3431-.2359.6252-.5409.7906-.8508.039-.0717.058-.0982.0712-.0985.0462.0013 1.5266.2187 1.5352.2259.0144.0121 1.2513 3.4307 1.9382 5.3598.1715.4801.3255.9014.3428.9371.1319.2706.3772.447.7641.5498.1716.0444.2274.0537.6954.1086.4403.0529.6143.0847.778.1404.1838.0629.1821.063.3676-.0472Z");
        icon.setStroke(Color.TRANSPARENT);
        icon.setFill(Color.LIGHTGRAY);
        setGraphic(icon);
        hoverProperty().addListener((_,_,newValue) -> icon.setFill(newValue ? Color.WHITE : Color.LIGHTGRAY));
        setTooltip(new Tooltip("Cut"));

        setOnAction(this::cutAction);
    }

    private void cutAction(ActionEvent actionEvent) {
        ArrayList<NoteView> selectedNotes = new ArrayList<>();
        for(Node node : NoteRenderer.getInstance().getChildren()) {
            if(node instanceof NoteView note) {
                if(note.getSelectedProperty().get()) {
                    selectedNotes.add(note);
                }
            }
        }
        if(selectedNotes.isEmpty()) {
            // TODO Message Select some Notes
        } else {
            for(NoteView noteView : selectedNotes) {
                noteView.getViewModel().deleteNote();
                // TODO in Ablage
            }
        }
    }
}
